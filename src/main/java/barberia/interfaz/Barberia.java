/*Elaborado por:
Daniel Alemán Ruiz (2023051957)
Luis Meza Chavarría (2023800023)
David Matamoros Jiménez (2023800039)*/
package barberia.interfaz;

// Paquetes utilizados
import barberia.control.Control;
import javax.swing.ImageIcon;

// Barberia: Clase que se encarga de la ventana para el funcionamiento del programa principal.
public class Barberia extends javax.swing.JFrame {
     // Variables utilizadas
     private Control control;
    
    /**
     * Creates new form Barberia
     */
     
     // Constructor
    public Barberia() {
        control = Control.getInstance();
        initComponents();
        String absolutePath = System.getProperty("user.dir");
        String picturePath = "\\src\\main\\java\\barberia\\interfaz\\wallpaper.png";
        ImageIcon wallpaper = new ImageIcon(absolutePath+picturePath);
        jLabel1.setIcon(wallpaper);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scheduleButton = new javax.swing.JButton();
        servicesButton = new javax.swing.JButton();
        clientesButton = new javax.swing.JButton();
        appointmentsButton = new javax.swing.JButton();
        waitListButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Barberia Millenium");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scheduleButton.setBackground(new java.awt.Color(51, 51, 51));
        scheduleButton.setForeground(new java.awt.Color(255, 255, 255));
        scheduleButton.setText("Cambiar Horario");
        scheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleButtonActionPerformed(evt);
            }
        });
        getContentPane().add(scheduleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, 130, -1));

        servicesButton.setBackground(new java.awt.Color(241, 217, 217));
        servicesButton.setForeground(new java.awt.Color(0, 0, 0));
        servicesButton.setText("Menú de Servicios");
        servicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesButtonActionPerformed(evt);
            }
        });
        getContentPane().add(servicesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 140, 40));

        clientesButton.setBackground(new java.awt.Color(241, 217, 217));
        clientesButton.setForeground(new java.awt.Color(0, 0, 0));
        clientesButton.setText("Menú de Clientes");
        clientesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clientesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 140, 40));

        appointmentsButton.setBackground(new java.awt.Color(241, 217, 217));
        appointmentsButton.setForeground(new java.awt.Color(0, 0, 0));
        appointmentsButton.setText("Menú de Citas");
        appointmentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentsButtonActionPerformed(evt);
            }
        });
        getContentPane().add(appointmentsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 140, 40));

        waitListButton.setBackground(new java.awt.Color(51, 51, 51));
        waitListButton.setForeground(new java.awt.Color(255, 255, 255));
        waitListButton.setText("Lista de Espera");
        waitListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitListButtonActionPerformed(evt);
            }
        });
        getContentPane().add(waitListButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, 130, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 340));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // Método para abrir el menú de clientes mediante un botón.
    private void clientesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientesButtonActionPerformed
        // Se cierra la ventana actual y se abre el menú de clientes.
        dispose();
        ClientesBS clientesMenu = new ClientesBS();
        clientesMenu.setVisible(true);
    }//GEN-LAST:event_clientesButtonActionPerformed
    
    // Método para abrir el menú de horario mediante un botón.
    private void scheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleButtonActionPerformed
        // Se cierra la ventana actual y se abre el menú de horario
        dispose();
        ScheduleBS horarioBarberia = new ScheduleBS();
        horarioBarberia.setVisible(true);
    }//GEN-LAST:event_scheduleButtonActionPerformed
    
    // Método para abrir el menú de citas mediante un botón.
    private void appointmentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentsButtonActionPerformed
        // Se cierra la ventana actual y se abre el menú de citas.
        dispose();
        CitasBS citasMenu = new CitasBS();
        citasMenu.setVisible(true);
    }//GEN-LAST:event_appointmentsButtonActionPerformed
    
    // Método para abrir el menú de servicios mediante un botón.
    private void servicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesButtonActionPerformed
        // Se cierra la ventana actual y se abre el menú de servicios.
        dispose();
        ServiciosBS serviciosMenu = new ServiciosBS();
        serviciosMenu.setVisible(true);
    }//GEN-LAST:event_servicesButtonActionPerformed
    
    // Método para abrir el menú de lista de espera mediante un botón.
    private void waitListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitListButtonActionPerformed
        // Se cierra la ventana actual y se abre el menú de lista de espera.
        dispose();
        ListaEsperaBS listaEsperaMenu = new ListaEsperaBS();
        listaEsperaMenu.setVisible(true);
    }//GEN-LAST:event_waitListButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Barberia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Barberia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Barberia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Barberia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Barberia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton appointmentsButton;
    private javax.swing.JButton clientesButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton scheduleButton;
    private javax.swing.JButton servicesButton;
    private javax.swing.JButton waitListButton;
    // End of variables declaration//GEN-END:variables
}
