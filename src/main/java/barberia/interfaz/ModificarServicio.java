package barberia.interfaz;

// Paquetes utilizados
import barberia.control.Control;
import javax.swing.JOptionPane;

// ModificarServicio: Clase que se encarga de la ventana para agregar o modificar los atributos de un servicio.
public class ModificarServicio extends javax.swing.JFrame {
    // Variables utilizadas
    private Control control;
    private String identificador;
    private boolean includesData;
    /**
     * Creates new form ModificarServicio
     */
    
    // Constructor #1
    public ModificarServicio() {
        control = Control.getInstance();
        includesData = false;
        initComponents();
    }
    
    // Constructor # 2
    public ModificarServicio(String identificador){
        control = Control.getInstance();
        this.identificador = identificador;
        includesData = true;
        initComponents();
        descriptionTextField.setText(identificador);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        descriptionTextField = new javax.swing.JTextField();
        acceptButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventana Servicio");
        setResizable(false);

        jLabel1.setText("Descripción");

        acceptButton.setText("Aceptar");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptButton)
                    .addComponent(cancelButton))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
     //  Método para aceptar los cambios modificados en un servicio mediante un botón.
    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
         // Se crea una variable para inicializar el menú de servicios.
        ServiciosBS serviciosMenu;
        // Se obtiene el valor de la descripción del espacio de texto.
        String descripcion = descriptionTextField.getText();
         // Si no se incluye información, entonces se tiene que agregar el servicio.
        if (includesData == false){
            // Revisar que el servicio no se encuentre asociado a una descripción existente.
            if (control.servicioExiste(descripcion) == true)
                JOptionPane.showMessageDialog(this, "Este servicio ya se encuentra registrado, intente con otra descripción.",
                        "Advertencia", JOptionPane.WARNING_MESSAGE);
            // En caso de que el servicio no tenga un descripción relacionada en el sistema, entonces se crea el servicio y se almacena.
            else{
                control.agregarServicio(descripcion);
                Control.guardarDatos(control);
                JOptionPane.showMessageDialog(this, "Se ha creado el servicio exitosamente.",
                        "Notificación", JOptionPane.INFORMATION_MESSAGE);
                // Se cierra la ventana actual y se abre nuevamente el menú de servicios.
                dispose();
                serviciosMenu = new ServiciosBS();
                serviciosMenu.setVisible(true);
            }
        // Si se incluye la información, entonces se tiene que modificar el servicio.      
        }else{
            if(control.servicioExiste(descripcion) == true && !descripcion.equals(identificador))
                JOptionPane.showMessageDialog(this, "Este servicio ya se encuentra registrado, intente con otra descripción.",
                        "Advertencia", JOptionPane.WARNING_MESSAGE);
             // En caso de que el servicio no tenga un descripción relacionada en el sistema o corresponda al mismo servicio,
            // entonces se  el servicio y se almacena
            else{
                control.modificarServicio(identificador, descripcion);
                Control.guardarDatos(control);
                JOptionPane.showMessageDialog(this, "Se modificado el servicio exitosamente.",
                        "Notificación", JOptionPane.INFORMATION_MESSAGE);
                // Se cierra la ventana actual y se abre nuevamente el menú de servicios.
                dispose();
                serviciosMenu = new ServiciosBS();
                serviciosMenu.setVisible(true);
            }                
        }
    }//GEN-LAST:event_acceptButtonActionPerformed

    // Método para cancelar los cambios y regresar al menú de servicios mediante un botón.
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
       // Se pregunta al usuario si desea volver al menú de servicios.
        int result = JOptionPane.showConfirmDialog(this, "¿Desea volver al menú de servicios?",
               "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
       // Si la respuesta es afirmativa entonces se cierra la ventana actual y se abre la ventana del menu de servicios.
        if (result == JOptionPane.YES_OPTION){
           dispose();
           ServiciosBS serviciosMenu = new ServiciosBS();
           serviciosMenu.setVisible(true);
       }
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarServicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
